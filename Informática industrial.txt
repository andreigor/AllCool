############ CRIAR E UTILIZAR O BANCO DE DADOS ############

CREATE DATABASE ALLCOOL

USE DATABASE ALLCOOL 

############ CRIAR TABELAS ############

CREATE TABLE USUARIO (NOME VARCHAR(30), 
		      CPF VARCHAR(11) PRIMARY KEY NOT NULL, 
		      EMAIL VARCHAR(30), 
		      SENHA VARCHAR(10));

CREATE TABLE VEICULO (VLC_ID INT(10) PRIMARY KEY NOT NULL,
		      NOME_VEICULO VARCHAR(10),
		      CPF_USUARIO VARCHAR(11) NOT NULL,
		      FOREIGN KEY (CPF_USUARIO) REFERENCES USUARIO(CPF));

CREATE TABLE CONSUMO (CNS_ID MEDIUMINT PRIMARY KEY NOT NULL AUTO_INCREMENT,
		      VLC_ID INT(10),
		      GASOLINA FLOAT(4,2),
		      ALCOOL FLOAT(4,2),
		      GNV FLOAT(4,2),   
		      FOREIGN KEY(VLC_ID) REFERENCES VEICULO(VLC_ID));
ALTER TABLE CONSUMO AUTO_INCREMENT = 0; 

CREATE TABLE POSTO (NOME_POSTO VARCHAR(30),
	  	    CNPJ VARCHAR(14) PRIMARY KEY NOT NULL);

CREATE TABLE PERCURSO (PRC_ID MEDIUMINT PRIMARY KEY NOT NULL AUTO_INCREMENT, 
               	       VLC_ID INT(10) NOT NULL,
		       ESTRADA ENUM('R','U') NOT NULL,
		       DISTANCIA FLOAT(6,2),
		       CNPJ_POSTO VARCHAR(14) NOT NULL, 
		       FOREIGN KEY (CNPJ_POSTO) REFERENCES POSTO(CNPJ),
		       FOREIGN KEY (VLC_ID) REFERENCES VEICULO(VLC_ID));
ALTER TABLE PERCURSO AUTO_INCREMENT = 0; 

CREATE TABLE PRECO (BRL_POSTO MEDIUMINT PRIMARY KEY NOT NULL AUTO_INCREMENT,
		    CNPJ VARCHAR(14),
                    GASOLINA FLOAT(5,2),
		    ALCOOL FLOAT(5,2),
		    GNV FLOAT(5,2),   
		    FOREIGN KEY(CNPJ) REFERENCES POSTO(CNPJ));
ALTER TABLE PRECO AUTO_INCREMENT = 0; 

CREATE TABLE TELEFONE_POSTO (TEL_POSTO MEDIUMINT PRIMARY KEY NOT NULL AUTO_INCREMENT,
			     TELEFONE VARCHAR(13),
			     CNPJ VARCHAR(14),
		             FOREIGN KEY(CNPJ) REFERENCES POSTO(CNPJ));
ALTER TABLE TELEFONE_POSTO AUTO_INCREMENT = 0;

CREATE TABLE LOCALIZACAO (CEP INT(9) PRIMARY KEY NOT NULL,
		          CIDADE VARCHAR(20),
			  BAIRRO VARCHAR(20),
			  RUA VARCHAR(50),
 			  NUMERO INT(2), 
			  CNPJ VARCHAR(14),
		          FOREIGN KEY(CNPJ) REFERENCES POSTO(CNPJ));

############ INSERINDO DADOS ############

INSERT INTO USUARIO(NOME, CPF, EMAIL, SENHA) VALUES('Jose', '12345678912', 'jose@email.com', 'admin'), ('Andre', '11111111111', 'andre@email.com', 'admin'), ('Pedro', '22222222222', 'pedro@email.com', 'admin');

INSERT INTO POSTO(NOME_POSTO, CNPJ) VALUES ('Posto BR' , '12345676543210'),('Posto Shell' , '11112222333344'),('Posto Ipiranga', '12312312312312');

INSERT INTO VEICULO(NOME_VEICULO, VLC_ID, CPF_USUARIO) VALUES('Kwid', '1', '12345678912'),('Gol', '2', '12345678912'), ('Kwid', '3', '11111111111'), ('Onix', '4', '22222222222');

INSERT INTO CONSUMO(GASOLINA, ALCOOL, GNV, VLC_ID) VALUES('14.9','10.3', '13.5', '1'),('7.3','9.7', '13.1', '2');

INSERT INTO PRECO(GASOLINA, ALCOOL, GNV, CNPJ) VALUES('5.95','5.29', '3.88', '12345676543210'),('6.6','6.1', '3.99', '12312312312312'), ('5.89','4.89', '3.65', '11112222333344');

INSERT INTO TELEFONE_POSTO(TELEFONE, CNPJ) VALUES('(83)3333-3333', '12345676543210' ),('(83)1111 2222', '12312312312312'), ('8312341234', '11112222333344');

INSERT INTO PERCURSO(ESTRADA, DISTANCIA, CNPJ_POSTO, VLC_ID) VALUES('R', '115.44', '12345676543210',  '1'),('R', '52.2', '12345676543210',  '2'), ('R', '156.45', '11112222333344',  '4'), ('U', '13.78', '12312312312312',  '3') 

############ CONSULTAS ############

## VEICULOS JOSE ## 

SELECT NOME, CPF, NOME_VEICULO FROM USUARIO INNER JOIN VEICULO ON CPF = CPF_USUARIO WHERE NOME = 'Jose';

## MAIOR DISTANCIA ##

CREATE VIEW MAX_DIST AS SELECT NOME, CPF, NOME_VEICULO, DISTANCIA FROM USUARIO, VEICULO, PERCURSO WHERE CPF = CPF_USUARIO AND VEICULO.VLC_ID = PERCURSO.VLC_ID;

CREATE VIEW DISTA_MAX AS SELECT NOME, CPF, NOME_VEICULO, DISTANCIA FROM USUARIO INNER JOIN VEICULO ON CPF = CPF_USUARIO INNER JOIN PERCURSO ON VEICULO.VLC_ID = PERCURSO.VLC_ID;

SELECT NOME, SUM(DISTANCIA) AS TOTAL_DIST FROM MAX_DIST GROUP BY CPF ORDER BY TOTAL_DIST DESC;

## TELEFONE POSTO MAIS CARO ##

CREATE VIEW POSTO_CARO AS SELECT NOME_POSTO, TELEFONE,POSTO.CNPJ, GASOLINA FROM POSTO INNER JOIN TELEFONE_POSTO ON POSTO.CNPJ = TELEFONE_POSTO.CNPJ INNER JOIN PRECO ON POSTO.CNPJ = PRECO.CNPJ;

SELECT MAX(GASOLINA), TELEFONE FROM POSTO_CARO;


